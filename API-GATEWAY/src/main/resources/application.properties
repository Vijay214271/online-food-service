server.port=8080
spring.application.name=API-GATEWAY

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# ✅ User Service with JWT, RateLimit, and CircuitBreaker
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates=Path=/users/**
spring.cloud.gateway.routes[0].filters[0]=JwtAuthFilter
spring.cloud.gateway.routes[0].filters[1]=RateLimitFilter
spring.cloud.gateway.routes[0].filters[2]=CircuitBreaker=name=orderService,fallbackUri=forward:/fallback/order

# ✅ Order Service with JWT and Rate Limiting
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[1].predicates=Path=/orders/**
spring.cloud.gateway.routes[1].filters[0]=JwtAuthFilter
spring.cloud.gateway.routes[1].filters[1]=RateLimitFilter

# ✅ Restaurant Service
spring.cloud.gateway.routes[2].id=restaurant-service
spring.cloud.gateway.routes[2].uri=lb://RESTAURANT-SERVICE
spring.cloud.gateway.routes[2].predicates=Path=/restaurants/**

# ✅ Payment Service
spring.cloud.gateway.routes[3].id=payment-service
spring.cloud.gateway.routes[3].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[3].predicates=Path=/payments/**

# ✅ Delivery Service
spring.cloud.gateway.routes[4].id=delivery-service
spring.cloud.gateway.routes[4].uri=lb://DELIVERY-SERVICE
spring.cloud.gateway.routes[4].predicates=Path=/delivery/**

# ✅ Resilience4j Circuit Breaker Config
resilience4j.circuitbreaker.instances.orderService.sliding-window-size=5
resilience4j.circuitbreaker.instances.orderService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.orderService.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.orderService.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.instances.orderService.slow-call-rate-threshold=50

# ✅ OAuth2 Configuration for Keycloak (if using OAuth)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/microservices-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/microservices-realm/protocols/openid-connect/certs
